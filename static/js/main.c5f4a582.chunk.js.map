{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","setState","handleSort","this","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEH,QAAU,WACR,EAAKI,UAAS,SAAAF,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBARzB,EAYEc,WAAa,SAACf,GACZ,EAAKc,UAAS,SAAAF,GAGZ,MAAO,CAAEX,WAFUD,IAAaJ,EAASiB,MAAeD,EAAMX,WAEzCD,gBAhB3B,4CAoBE,WAAU,IAAD,OACP,EAAiCgB,KAAKJ,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKJ,WAAWnB,EAASU,WACxCW,UAAWG,IAAW,iBAAkB,CACtC,WAAYpB,IAAaJ,EAASU,WAJtC,iCAUA,wBACEY,KAAK,SACLD,UAAWG,IAAW,oBAAqB,CACzC,WAAYpB,IAAaJ,EAASY,SAEpCW,QAAS,kBAAM,EAAKJ,WAAWnB,EAASY,SAL1C,4BAUA,wBACEU,KAAK,SACLD,UAAWG,IAAW,oBAAqB,CACzC,WAAYnB,IAEdkB,QAASH,KAAKN,QALhB,sBAWGV,IAAaJ,EAASiB,MAAQZ,IAC7B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKJ,WAAWnB,EAASiB,OAH1C,sBAWN,6BACIf,EACAD,EACAmB,KAAKJ,OACLS,KAAI,SAAAC,GAAI,OACR,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA1EpC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c5f4a582.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState(state => {\n      const isReversed = sortType === SortType.NONE ? false : state.isReversed;\n\n      return { isReversed, sortType };\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => this.handleSort(SortType.NONE)}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          { getReorderedGoods(\n            goodsFromServer,\n            this.state,\n          ).map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\n// sortByAlphabet = () => {\n//   this.setState({ sortType: SortType.ALPHABET });\n// };\n\n// sortByLength = () => {\n//   this.setState({ sortType: SortType.LENGTH });\n// };\n\n// noneSort = () => {\n//   this.setState({ sortType: SortType.NONE, isReversed: false });\n// };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}