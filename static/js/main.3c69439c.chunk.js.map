{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","setState","sortByAlphabet","sortByLength","noneSort","this","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAuBzB,OArBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAKTR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAxCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEL,QAAU,WACR,EAAKM,UAAS,SAAAF,GAAK,MAAK,CACtBb,YAAaa,EAAMb,gBARzB,EAYEgB,eAAiB,WACf,EAAKD,SAAS,CAAEhB,SAAUJ,EAASU,YAbvC,EAgBEY,aAAe,WACb,EAAKF,SAAS,CAAEhB,SAAUJ,EAASY,UAjBvC,EAoBEW,SAAW,WACT,EAAKH,SAAS,CAAEhB,SAAUJ,EAASmB,KAAMd,YAAY,KArBzD,4CAwBE,WACE,MAAiCmB,KAAKN,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASH,KAAKH,eACdI,UAAWG,IAAW,iBAAkB,CACtC,WAAYxB,IAAaJ,EAASU,WAJtC,iCAUA,wBACEgB,KAAK,SACLD,UAAWG,IAAW,oBAAqB,CACzC,WAAYxB,IAAaJ,EAASY,SAEpCe,QAASH,KAAKF,aALhB,4BAUA,wBACEI,KAAK,SACLD,UAAWG,IAAW,oBAAqB,CACzC,YAA2B,IAAfvB,IAEdsB,QAASH,KAAKV,QALhB,sBAWGV,IAAaJ,EAASmB,OAAuB,IAAfd,IAC7B,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,SAHhB,sBAWN,6BACIrB,EACAD,EACAuB,KAAKN,OACLW,KAAI,SAAAC,GAAI,OACR,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA9EpC,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c69439c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  // Sort and reverse goods if needed\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  noneSort = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortByAlphabet}\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': isReversed === true,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed === true) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.noneSort}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          { getReorderedGoods(\n            goodsFromServer,\n            this.state,\n          ).map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}